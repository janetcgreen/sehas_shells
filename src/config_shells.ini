# The config file can be used to specify the following addition processing values
# input type: the kind of archive it checks to get the last processed data time
#             when updating in real time
#             (hapi, sqlite, mysql, csv, or json)
# output_type: the kind of archive that the data is written too
#              (hapi, sqlite, mysql, csv, json, netcdf)
# dbase: if the input_type or output_type is sqlite or mysql then the data
#        base name is required and can be given with this value
# tblname: if the input_type or output_type is sqlite or mysql then the tblname
#        where the data is stored must be given
# server: if the input or output type is a hapi data server then the url to the server
#        must be given here
# fname: if the input or output is a file archive (i.e. csv,json, or netcdf) then the
#        start of the filenames can be given with this variable

# Its setup in this odd way because CCMC will keep the data in a hapi server
# so the input_type could be hapi for checking in real time mode
# to see what data needs to be processed. But the data will be written
# out to a csv/json file and then added to the hapi database as a seperate process

[DEFAULT]
input_type = csv
output_type = csv
fname = shells_inputs

[SHELLS_TESTING_JSON]
# This is the needed values for writing daily updating
# json files from an sqlite dbase
input_type = sqlite
dbase = test_sehas_shells
tblname = ShellsInputsTbl
output_type = json
fname = shells_inputs_test

[SHELLS_TESTING_CSV]
# This is the needed values for writing daily updating
# csv files from an sqlite dbase
input_type = sqlite
dbase = test_sehas_shells
tblname = ShellsInputsTbl
output_type = csv
fname = shells_inputs_test

[SHELLS_CCMC]
# data will be stored in the ISWA database
input_type = hapi
server = https://iswa.gsfc.nasa.gov/IswaSystemWebApp/hapi/
dataset = shells_inputs
output_type = json

[SHELLS_TESTING_RT]
# data stored in daily csv files
input_type = csv
output_type = csv
fname = shells_inputs_test_rt

[SHELLS_TESTING_SQLITE]
# If you want to read and write to an sqlite
# dbase then you need to give the database name and
# the table name. The columns in the table are
# assumed to be the same as the ones written to a csv/json file
# These are the channel mep_ele_tel90_e1_L_1.0,mep_ele_tel90_e1_L_1.25..mep_ele_tel90_e1_L_8.0
# ...Kp*10,Kp_max,satID
# The directory of the sqlite dbase has to be passed in outdir otherwise it is assumed to be
# the current directory
input_type = sqlite
output_type = sqlite
dbase = test_sehas_shells
tblname = ShellsInputsTbl

[SHELLS_BATCH]
# This is the needed values for writing daily updating
# csv files from an sqlite dbase
input_type = csv
output_type = csv
fname = shells_inputs_mapped




